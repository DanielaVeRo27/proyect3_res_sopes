// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: rabbitmq_writer.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RabbitmqMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Municipality  string                 `protobuf:"bytes,1,opt,name=municipality,proto3" json:"municipality,omitempty"`
	Temperature   int32                  `protobuf:"varint,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity      int32                  `protobuf:"varint,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Weather       string                 `protobuf:"bytes,4,opt,name=weather,proto3" json:"weather,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RabbitmqMessage) Reset() {
	*x = RabbitmqMessage{}
	mi := &file_rabbitmq_writer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RabbitmqMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RabbitmqMessage) ProtoMessage() {}

func (x *RabbitmqMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rabbitmq_writer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RabbitmqMessage.ProtoReflect.Descriptor instead.
func (*RabbitmqMessage) Descriptor() ([]byte, []int) {
	return file_rabbitmq_writer_proto_rawDescGZIP(), []int{0}
}

func (x *RabbitmqMessage) GetMunicipality() string {
	if x != nil {
		return x.Municipality
	}
	return ""
}

func (x *RabbitmqMessage) GetTemperature() int32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *RabbitmqMessage) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *RabbitmqMessage) GetWeather() string {
	if x != nil {
		return x.Weather
	}
	return ""
}

type RabbitmqResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RabbitmqResponse) Reset() {
	*x = RabbitmqResponse{}
	mi := &file_rabbitmq_writer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RabbitmqResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RabbitmqResponse) ProtoMessage() {}

func (x *RabbitmqResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rabbitmq_writer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RabbitmqResponse.ProtoReflect.Descriptor instead.
func (*RabbitmqResponse) Descriptor() ([]byte, []int) {
	return file_rabbitmq_writer_proto_rawDescGZIP(), []int{1}
}

func (x *RabbitmqResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RabbitmqResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_rabbitmq_writer_proto protoreflect.FileDescriptor

const file_rabbitmq_writer_proto_rawDesc = "" +
	"\n" +
	"\x15rabbitmq_writer.proto\"\x8d\x01\n" +
	"\x0fRabbitmqMessage\x12\"\n" +
	"\fmunicipality\x18\x01 \x01(\tR\fmunicipality\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x05R\vtemperature\x12\x1a\n" +
	"\bhumidity\x18\x03 \x01(\x05R\bhumidity\x12\x18\n" +
	"\aweather\x18\x04 \x01(\tR\aweather\"D\n" +
	"\x10RabbitmqResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2J\n" +
	"\x0eRabbitmqWriter\x128\n" +
	"\x11PublishToRabbitMQ\x12\x10.RabbitmqMessage\x1a\x11.RabbitmqResponseB\tZ\a./;mainb\x06proto3"

var (
	file_rabbitmq_writer_proto_rawDescOnce sync.Once
	file_rabbitmq_writer_proto_rawDescData []byte
)

func file_rabbitmq_writer_proto_rawDescGZIP() []byte {
	file_rabbitmq_writer_proto_rawDescOnce.Do(func() {
		file_rabbitmq_writer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rabbitmq_writer_proto_rawDesc), len(file_rabbitmq_writer_proto_rawDesc)))
	})
	return file_rabbitmq_writer_proto_rawDescData
}

var file_rabbitmq_writer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rabbitmq_writer_proto_goTypes = []any{
	(*RabbitmqMessage)(nil),  // 0: RabbitmqMessage
	(*RabbitmqResponse)(nil), // 1: RabbitmqResponse
}
var file_rabbitmq_writer_proto_depIdxs = []int32{
	0, // 0: RabbitmqWriter.PublishToRabbitMQ:input_type -> RabbitmqMessage
	1, // 1: RabbitmqWriter.PublishToRabbitMQ:output_type -> RabbitmqResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rabbitmq_writer_proto_init() }
func file_rabbitmq_writer_proto_init() {
	if File_rabbitmq_writer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rabbitmq_writer_proto_rawDesc), len(file_rabbitmq_writer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rabbitmq_writer_proto_goTypes,
		DependencyIndexes: file_rabbitmq_writer_proto_depIdxs,
		MessageInfos:      file_rabbitmq_writer_proto_msgTypes,
	}.Build()
	File_rabbitmq_writer_proto = out.File
	file_rabbitmq_writer_proto_goTypes = nil
	file_rabbitmq_writer_proto_depIdxs = nil
}
